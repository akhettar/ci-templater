#  This file is automatically generated - see action-generate repo

# .oPYo.                                    o              8
# 8    8                                    8              8
# 8      .oPYo. odYo. .oPYo. oPYo. .oPYo.  o8P .oPYo. .oPYo8
# 8   oo 8oooo8 8' `8 8oooo8 8  `' .oooo8   8  8oooo8 8    8
# 8    8 8.     8   8 8.     8     8    8   8  8.     8    8
# `YooP8 `Yooo' 8   8 `Yooo' 8     `YooP8   8  `Yooo' `YooP'
# :....8 :.....:..::..:.....:..:::::.....:::..::.....::.....:
# :::::8 ::::::::::::::::::::::::::::::::::::::::::::::::::::
# :::::..::::::::::::::::::::::::::::::::::::::::::::::::::::

#  ooooo  o 8
#  8        8
# o8oo   o8 8 .oPYo.
#  8      8 8 8oooo8
#  8      8 8 8.
#  8      8 8 `Yooo'
# :..:::::....:.....:
# :::::::::::::::::::
# :::::::::::::::::::
#
# Please do not modify


on:
  release:
    types: [created]

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: {[.container_name]}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: {[.service_name]}
        cluster: default
        wait-for-service-stability: true
